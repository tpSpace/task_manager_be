// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// In this project we will use prisma as an ORM for ease of use as well as security
// BTW please setup redis for caching and rate limiting
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  name      String
  password  String
  avatar    String?
  projectId String[]
  Comment   Comment[]
  Project   Project[]
  Ticket    Ticket[]
}

model Stage {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String

  Project   Project @relation(fields: [projectId], references: [id])
  projectId String  @db.ObjectId
}

model Tag {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  priority Int
  color    String

  Project   Project  @relation(fields: [projectId], references: [id])
  projectId String   @db.ObjectId
  Ticket    Ticket[]
}

model Comment {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  content String

  author   User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  ticket   Ticket @relation(fields: [ticketId], references: [id])
  ticketId String @db.ObjectId
}

model Project {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  history String[]

  admin   User    @relation(fields: [adminId], references: [id])
  adminId String  @db.ObjectId
  Stage   Stage[]
  Tag     Tag[]
}

model Ticket {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  description      String
  
  assignUserId     String[]  
  parentTicketId   String
  childrenTicketId String[]
  dealine          DateTime
  comment          Comment[]

  author   User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  tag   Tag    @relation(fields: [tagId], references: [id])
  tagId String @db.ObjectId
}
